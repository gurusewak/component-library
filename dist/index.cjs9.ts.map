{"version":3,"file":"index.cjs9.ts","sources":["../src/lib/helper.ts"],"sourcesContent":["\n\n  const convertTimeToMinutes = (timeString: string) => {\n    const [hours, minutes, seconds] = timeString.split(\":\").map(Number);\n    return hours * 60 + minutes + seconds / 60;\n  };\n\n  export const sortDataByTrackedTime = (\n      sortedData: any[],\n      setSortedData: Function,\n      setSortOrder: Function,\n      ascending: boolean\n    ) => {\n      const newData = [...sortedData].sort((a, b) => {\n        const timeA = convertTimeToMinutes(a.tracked_time);\n        const timeB = convertTimeToMinutes(b.tracked_time);\n        return ascending ? timeA - timeB : timeB - timeA;\n      });\n      setSortedData(newData);\n      setSortOrder(ascending ? \"asc\" : \"desc\");\n  };\n  \n  export const sortingDataByTime = (\n    sortKey:string,\n    sortedData: any[],\n    setSortedData: Function,\n    setSortOrder: Function,\n    ascending: boolean\n  ) => {\n    const newData = [...sortedData].sort((a: any, b: any) => {\n      const valueA = new Date(a[sortKey]).getTime();\n      const valueB = new Date(b[sortKey]).getTime();\n      return ascending ? valueA - valueB : valueB - valueA;\n    });\n  \n    setSortedData(newData);\n    setSortOrder(ascending ? \"asc\" : \"desc\");\n  };\n\n  export  const formatData = (item: string) => {\n\n    // return dataToRender.map((item) => {\n    // Split tracked_time to get hours, minutes, and seconds\n    const [hours, minutes, seconds] = item\n      .split(\":\")\n      .map((part: string) => parseInt(part));\n\n    // Convert hours and minutes to total minutes\n    const totalMinutes = hours * 60 + minutes;\n\n    // Set tracked_time_icon based on total minutes\n    let trackedTimeIcon = null;\n    switch (true) {\n      case totalMinutes <= 19:\n        trackedTimeIcon = \"greyClock\";\n        break;\n      case totalMinutes >= 20 && totalMinutes <= 39:\n        trackedTimeIcon = \"blackClock\";\n        break;\n      case totalMinutes >= 40 && totalMinutes <= 59:\n        trackedTimeIcon = \"yellowClock\";\n        break;\n      default:\n        trackedTimeIcon = \"redClock\";\n    }\n    \n    const voiceMailIcon = totalMinutes > 0 ? \"phone\" : \"voicemail\";\n\n    // Return the modified object\n    return {\n      tracked_time_icon: trackedTimeIcon,\n      last_call_icons: voiceMailIcon,\n    };\n//   });\n  }\n\n  export const getNotificationRelativeTime = (timestamp: string | number | Date) => {\n\n    if (!timestamp) return \"\";\n\n    const now = Date.now();\n    const diff = now - new Date(timestamp).getTime();\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n\n    switch (true) {\n      case days > 7:\n        return new Date(timestamp).toLocaleDateString(undefined, {\n          month: \"short\",\n          day: \"numeric\",\n        });\n      case days === 7:\n        return `1 week ago`;\n      case days >= 2 && days <= 7:\n        return `${days} days ago`;\n      case days === 1:\n        return `1 day ago`;\n      case hours >= 1 && hours <= 23:\n        return `${hours} hours ago`;\n      case hours === 0 && minutes > 1 && minutes <= 59:\n        return `${minutes} minutes ago`;\n      case hours === 0 && minutes === 1:\n        return \"a minute ago\";\n      case seconds <= 10:\n        return \"Within the last few seconds\";\n      default:\n        return \"just now\";\n    }\n  };"],"names":["convertTimeToMinutes","timeString","hours","minutes","seconds","sortDataByTrackedTime","sortedData","setSortedData","setSortOrder","ascending","newData","a","b","timeA","timeB","sortingDataByTime","sortKey","valueA","valueB","formatData","item","part","totalMinutes","trackedTimeIcon","voiceMailIcon","getNotificationRelativeTime","timestamp","diff","days"],"mappings":"gFAEE,MAAMA,EAAwBC,GAAuB,CAC7C,KAAA,CAACC,EAAOC,EAASC,CAAO,EAAIH,EAAW,MAAM,GAAG,EAAE,IAAI,MAAM,EAC3D,OAAAC,EAAQ,GAAKC,EAAUC,EAAU,EAC1C,EAEaC,EAAwB,CACjCC,EACAC,EACAC,EACAC,IACG,CACG,MAAAC,EAAU,CAAC,GAAGJ,CAAU,EAAE,KAAK,CAACK,EAAGC,IAAM,CACvC,MAAAC,EAAQb,EAAqBW,EAAE,YAAY,EAC3CG,EAAQd,EAAqBY,EAAE,YAAY,EAC1C,OAAAH,EAAYI,EAAQC,EAAQA,EAAQD,CAAA,CAC5C,EACDN,EAAcG,CAAO,EACRF,EAAAC,EAAY,MAAQ,MAAM,CAC3C,EAEaM,EAAoB,CAC/BC,EACAV,EACAC,EACAC,EACAC,IACG,CACG,MAAAC,EAAU,CAAC,GAAGJ,CAAU,EAAE,KAAK,CAAC,EAAQM,IAAW,CACvD,MAAMK,EAAS,IAAI,KAAK,EAAED,CAAO,CAAC,EAAE,UAC9BE,EAAS,IAAI,KAAKN,EAAEI,CAAO,CAAC,EAAE,UAC7B,OAAAP,EAAYQ,EAASC,EAASA,EAASD,CAAA,CAC/C,EAEDV,EAAcG,CAAO,EACRF,EAAAC,EAAY,MAAQ,MAAM,CACzC,EAEcU,EAAcC,GAAiB,CAI3C,KAAM,CAAClB,EAAOC,EAASC,CAAO,EAAIgB,EAC/B,MAAM,GAAG,EACT,IAAKC,GAAiB,SAASA,CAAI,CAAC,EAGjCC,EAAepB,EAAQ,GAAKC,EAGlC,IAAIoB,EAAkB,KACtB,OAAQ,GAAM,CACZ,KAAKD,GAAgB,GACDC,EAAA,YAClB,MACF,KAAKD,GAAgB,IAAMA,GAAgB,IACvBC,EAAA,aAClB,MACF,KAAKD,GAAgB,IAAMA,GAAgB,IACvBC,EAAA,cAClB,MACF,QACoBA,EAAA,UACtB,CAEM,MAAAC,EAAgBF,EAAe,EAAI,QAAU,YAG5C,MAAA,CACL,kBAAmBC,EACnB,gBAAiBC,CAAA,CAGrB,EAEaC,EAA+BC,GAAsC,CAEhF,GAAI,CAACA,EAAkB,MAAA,GAGvB,MAAMC,EADM,KAAK,MACE,IAAI,KAAKD,CAAS,EAAE,UACjCtB,EAAU,KAAK,MAAMuB,EAAO,GAAI,EAChCxB,EAAU,KAAK,MAAMC,EAAU,EAAE,EACjCF,EAAQ,KAAK,MAAMC,EAAU,EAAE,EAC/ByB,EAAO,KAAK,MAAM1B,EAAQ,EAAE,EAElC,OAAQ,GAAM,CACZ,KAAK0B,EAAO,EACV,OAAO,IAAI,KAAKF,CAAS,EAAE,mBAAmB,OAAW,CACvD,MAAO,QACP,IAAK,SAAA,CACN,EACH,KAAKE,IAAS,EACL,MAAA,aACT,KAAKA,GAAQ,GAAKA,GAAQ,GACxB,MAAO,GAAGA,CAAI,YAChB,KAAKA,IAAS,EACL,MAAA,YACT,KAAK1B,GAAS,GAAKA,GAAS,IAC1B,MAAO,GAAGA,CAAK,aACjB,KAAKA,IAAU,GAAKC,EAAU,GAAKA,GAAW,IAC5C,MAAO,GAAGA,CAAO,eACnB,KAAKD,IAAU,GAAKC,IAAY,GACvB,MAAA,eACT,KAAKC,GAAW,GACP,MAAA,8BACT,QACS,MAAA,UACX,CACF"}