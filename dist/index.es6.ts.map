{"version":3,"file":"index.es6.ts","sources":["../node_modules/@radix-ui/react-slot/dist/index.mjs"],"sourcesContent":["import $9IrjX$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport {forwardRef as $9IrjX$forwardRef, Children as $9IrjX$Children, isValidElement as $9IrjX$isValidElement, createElement as $9IrjX$createElement, cloneElement as $9IrjX$cloneElement, Fragment as $9IrjX$Fragment} from \"react\";\nimport {composeRefs as $9IrjX$composeRefs} from \"@radix-ui/react-compose-refs\";\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /*#__PURE__*/ $9IrjX$forwardRef((props, forwardedRef)=>{\n    const { children: children , ...slotProps } = props;\n    const childrenArray = $9IrjX$Children.toArray(children);\n    const slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);\n    if (slottable) {\n        // the new element to render is the one passed as a child of `Slottable`\n        const newElement = slottable.props.children;\n        const newChildren = childrenArray.map((child)=>{\n            if (child === slottable) {\n                // because the new element will be the one rendered, we are only interested\n                // in grabbing its children (`newElement.props.children`)\n                if ($9IrjX$Children.count(newElement) > 1) return $9IrjX$Children.only(null);\n                return /*#__PURE__*/ $9IrjX$isValidElement(newElement) ? newElement.props.children : null;\n            } else return child;\n        });\n        return /*#__PURE__*/ $9IrjX$createElement($5e63c961fc1ce211$var$SlotClone, $9IrjX$babelruntimehelpersesmextends({}, slotProps, {\n            ref: forwardedRef\n        }), /*#__PURE__*/ $9IrjX$isValidElement(newElement) ? /*#__PURE__*/ $9IrjX$cloneElement(newElement, undefined, newChildren) : null);\n    }\n    return /*#__PURE__*/ $9IrjX$createElement($5e63c961fc1ce211$var$SlotClone, $9IrjX$babelruntimehelpersesmextends({}, slotProps, {\n        ref: forwardedRef\n    }), children);\n});\n$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = 'Slot';\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$var$SlotClone = /*#__PURE__*/ $9IrjX$forwardRef((props, forwardedRef)=>{\n    const { children: children , ...slotProps } = props;\n    if (/*#__PURE__*/ $9IrjX$isValidElement(children)) return /*#__PURE__*/ $9IrjX$cloneElement(children, {\n        ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),\n        ref: forwardedRef ? $9IrjX$composeRefs(forwardedRef, children.ref) : children.ref\n    });\n    return $9IrjX$Children.count(children) > 1 ? $9IrjX$Children.only(null) : null;\n});\n$5e63c961fc1ce211$var$SlotClone.displayName = 'SlotClone';\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/ const $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children: children  })=>{\n    return /*#__PURE__*/ $9IrjX$createElement($9IrjX$Fragment, null, children);\n};\n/* ---------------------------------------------------------------------------------------------- */ function $5e63c961fc1ce211$var$isSlottable(child) {\n    return /*#__PURE__*/ $9IrjX$isValidElement(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;\n}\nfunction $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {\n    // all child props should override\n    const overrideProps = {\n        ...childProps\n    };\n    for(const propName in childProps){\n        const slotPropValue = slotProps[propName];\n        const childPropValue = childProps[propName];\n        const isHandler = /^on[A-Z]/.test(propName);\n        if (isHandler) {\n            // if the handler exists on both, we compose them\n            if (slotPropValue && childPropValue) overrideProps[propName] = (...args)=>{\n                childPropValue(...args);\n                slotPropValue(...args);\n            };\n            else if (slotPropValue) overrideProps[propName] = slotPropValue;\n        } else if (propName === 'style') overrideProps[propName] = {\n            ...slotPropValue,\n            ...childPropValue\n        };\n        else if (propName === 'className') overrideProps[propName] = [\n            slotPropValue,\n            childPropValue\n        ].filter(Boolean).join(' ');\n    }\n    return {\n        ...slotProps,\n        ...overrideProps\n    };\n}\nconst $5e63c961fc1ce211$export$be92b6f5f03c0fe9 = $5e63c961fc1ce211$export$8c6ed5c666ac1360;\n\n\n\n\nexport {$5e63c961fc1ce211$export$8c6ed5c666ac1360 as Slot, $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 as Slottable, $5e63c961fc1ce211$export$be92b6f5f03c0fe9 as Root};\n//# sourceMappingURL=index.mjs.map\n"],"names":["$5e63c961fc1ce211$export$8c6ed5c666ac1360","$9IrjX$forwardRef","props","forwardedRef","children","slotProps","childrenArray","$9IrjX$Children","slottable","$5e63c961fc1ce211$var$isSlottable","newElement","newChildren","child","$9IrjX$isValidElement","$9IrjX$createElement","$5e63c961fc1ce211$var$SlotClone","$9IrjX$babelruntimehelpersesmextends","$9IrjX$cloneElement","$5e63c961fc1ce211$var$mergeProps","$9IrjX$composeRefs","$5e63c961fc1ce211$export$d9f1ccf0bdb05d45","$9IrjX$Fragment","childProps","overrideProps","propName","slotPropValue","childPropValue","args"],"mappings":";;;AAS0G,MAACA,IAA0DC,gBAAAA,EAAkB,CAACC,GAAOC,MAAe;AAC1M,QAAM,EAAE,UAAUC,GAAW,GAAGC,EAAS,IAAKH,GACxCI,IAAgBC,EAAgB,QAAQH,CAAQ,GAChDI,IAAYF,EAAc,KAAKG,CAAiC;AACtE,MAAID,GAAW;AAEX,UAAME,IAAaF,EAAU,MAAM,UAC7BG,IAAcL,EAAc,IAAI,CAACM,MAC/BA,MAAUJ,IAGND,EAAgB,MAAMG,CAAU,IAAI,IAAUH,EAAgB,KAAK,IAAI,IACtDM,gBAAAA,EAAsBH,CAAU,IAAIA,EAAW,MAAM,WAAW,OAC3EE,CACjB;AACD,WAAqBE,gBAAAA,EAAqBC,GAAiCC,EAAqC,CAAA,GAAIX,GAAW;AAAA,MAC3H,KAAKF;AAAA,IACjB,CAAS,GAAiBU,gBAAAA,EAAsBH,CAAU,IAAkBO,gBAAAA,EAAoBP,GAAY,QAAWC,CAAW,IAAI,IAAI;AAAA,EACrI;AACD,SAAqBG,gBAAAA,EAAqBC,GAAiCC,EAAqC,CAAA,GAAIX,GAAW;AAAA,IAC3H,KAAKF;AAAA,EACb,CAAK,GAAGC,CAAQ;AAChB,CAAC;AACDJ,EAA0C,cAAc;AAG6C,MAAMe,IAAgDd,gBAAAA,EAAkB,CAACC,GAAOC,MAAe;AAChM,QAAM,EAAE,UAAUC,GAAW,GAAGC,EAAS,IAAKH;AAC9C,SAAkBW,gBAAAA,EAAsBT,CAAQ,IAAwBa,gBAAAA,EAAoBb,GAAU;AAAA,IAClG,GAAGc,EAAiCb,GAAWD,EAAS,KAAK;AAAA,IAC7D,KAAKD,IAAegB,EAAmBhB,GAAcC,EAAS,GAAG,IAAIA,EAAS;AAAA,EACtF,CAAK,IACMG,EAAgB,MAAMH,CAAQ,IAAI,IAAIG,EAAgB,KAAK,IAAI,IAAI;AAC9E,CAAC;AACDQ,EAAgC,cAAc;AAG4D,MAACK,IAA4C,CAAC,EAAE,UAAUhB,EAAQ,MACnJU,gBAAAA,EAAqBO,GAAiB,MAAMjB,CAAQ;AAEwB,SAASK,EAAkCG,GAAO;AACnJ,SAAqBC,gBAAAA,EAAsBD,CAAK,KAAKA,EAAM,SAASQ;AACxE;AACA,SAASF,EAAiCb,GAAWiB,GAAY;AAE7D,QAAMC,IAAgB;AAAA,IAClB,GAAGD;AAAA,EACX;AACI,aAAUE,KAAYF,GAAW;AAC7B,UAAMG,IAAgBpB,EAAUmB,CAAQ,GAClCE,IAAiBJ,EAAWE,CAAQ;AAE1C,IADkB,WAAW,KAAKA,CAAQ,IAGlCC,KAAiBC,IAAgBH,EAAcC,CAAQ,IAAI,IAAIG,MAAO;AACtE,MAAAD,EAAe,GAAGC,CAAI,GACtBF,EAAc,GAAGE,CAAI;AAAA,IACrC,IACqBF,MAAeF,EAAcC,CAAQ,IAAIC,KAC3CD,MAAa,UAASD,EAAcC,CAAQ,IAAI;AAAA,MACvD,GAAGC;AAAA,MACH,GAAGC;AAAA,IACf,IACiBF,MAAa,gBAAaD,EAAcC,CAAQ,IAAI;AAAA,MACzDC;AAAA,MACAC;AAAA,IACH,EAAC,OAAO,OAAO,EAAE,KAAK,GAAG;AAAA,EAC7B;AACD,SAAO;AAAA,IACH,GAAGrB;AAAA,IACH,GAAGkB;AAAA,EACX;AACA;","x_google_ignoreList":[0]}