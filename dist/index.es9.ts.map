{"version":3,"file":"index.es9.ts","sources":["../src/lib/helper.ts"],"sourcesContent":["\n\n  const convertTimeToMinutes = (timeString: string) => {\n    const [hours, minutes, seconds] = timeString.split(\":\").map(Number);\n    return hours * 60 + minutes + seconds / 60;\n  };\n\n  export const sortDataByTrackedTime = (\n      sortedData: any[],\n      setSortedData: Function,\n      setSortOrder: Function,\n      ascending: boolean\n    ) => {\n      const newData = [...sortedData].sort((a, b) => {\n        const timeA = convertTimeToMinutes(a.tracked_time);\n        const timeB = convertTimeToMinutes(b.tracked_time);\n        return ascending ? timeA - timeB : timeB - timeA;\n      });\n      setSortedData(newData);\n      setSortOrder(ascending ? \"asc\" : \"desc\");\n  };\n  \n  export const sortingDataByTime = (\n    sortKey:string,\n    sortedData: any[],\n    setSortedData: Function,\n    setSortOrder: Function,\n    ascending: boolean\n  ) => {\n    const newData = [...sortedData].sort((a: any, b: any) => {\n      const valueA = new Date(a[sortKey]).getTime();\n      const valueB = new Date(b[sortKey]).getTime();\n      return ascending ? valueA - valueB : valueB - valueA;\n    });\n  \n    setSortedData(newData);\n    setSortOrder(ascending ? \"asc\" : \"desc\");\n  };\n\n  export  const formatData = (item: string) => {\n\n    // return dataToRender.map((item) => {\n    // Split tracked_time to get hours, minutes, and seconds\n    const [hours, minutes, seconds] = item\n      .split(\":\")\n      .map((part: string) => parseInt(part));\n\n    // Convert hours and minutes to total minutes\n    const totalMinutes = hours * 60 + minutes;\n\n    // Set tracked_time_icon based on total minutes\n    let trackedTimeIcon = null;\n    switch (true) {\n      case totalMinutes <= 19:\n        trackedTimeIcon = \"greyClock\";\n        break;\n      case totalMinutes >= 20 && totalMinutes <= 39:\n        trackedTimeIcon = \"blackClock\";\n        break;\n      case totalMinutes >= 40 && totalMinutes <= 59:\n        trackedTimeIcon = \"yellowClock\";\n        break;\n      default:\n        trackedTimeIcon = \"redClock\";\n    }\n    \n    const voiceMailIcon = totalMinutes > 0 ? \"phone\" : \"voicemail\";\n\n    // Return the modified object\n    return {\n      tracked_time_icon: trackedTimeIcon,\n      last_call_icons: voiceMailIcon,\n    };\n//   });\n  }\n\n  export const getNotificationRelativeTime = (timestamp: string | number | Date) => {\n\n    if (!timestamp) return \"\";\n\n    const now = Date.now();\n    const diff = now - new Date(timestamp).getTime();\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n\n    switch (true) {\n      case days > 7:\n        return new Date(timestamp).toLocaleDateString(undefined, {\n          month: \"short\",\n          day: \"numeric\",\n        });\n      case days === 7:\n        return `1 week ago`;\n      case days >= 2 && days <= 7:\n        return `${days} days ago`;\n      case days === 1:\n        return `1 day ago`;\n      case hours >= 1 && hours <= 23:\n        return `${hours} hours ago`;\n      case hours === 0 && minutes > 1 && minutes <= 59:\n        return `${minutes} minutes ago`;\n      case hours === 0 && minutes === 1:\n        return \"a minute ago\";\n      case seconds <= 10:\n        return \"Within the last few seconds\";\n      default:\n        return \"just now\";\n    }\n  };"],"names":["convertTimeToMinutes","timeString","hours","minutes","seconds","sortDataByTrackedTime","sortedData","setSortedData","setSortOrder","ascending","newData","a","b","timeA","timeB","sortingDataByTime","sortKey","valueA","valueB","formatData","item","part","totalMinutes","trackedTimeIcon","voiceMailIcon","getNotificationRelativeTime","timestamp","diff","days"],"mappings":"AAEE,MAAMA,IAAuB,CAACC,MAAuB;AAC7C,QAAA,CAACC,GAAOC,GAASC,CAAO,IAAIH,EAAW,MAAM,GAAG,EAAE,IAAI,MAAM;AAC3D,SAAAC,IAAQ,KAAKC,IAAUC,IAAU;AAC1C,GAEaC,IAAwB,CACjCC,GACAC,GACAC,GACAC,MACG;AACG,QAAAC,IAAU,CAAC,GAAGJ,CAAU,EAAE,KAAK,CAACK,GAAGC,MAAM;AACvC,UAAAC,IAAQb,EAAqBW,EAAE,YAAY,GAC3CG,IAAQd,EAAqBY,EAAE,YAAY;AAC1C,WAAAH,IAAYI,IAAQC,IAAQA,IAAQD;AAAA,EAAA,CAC5C;AACD,EAAAN,EAAcG,CAAO,GACRF,EAAAC,IAAY,QAAQ,MAAM;AAC3C,GAEaM,IAAoB,CAC/BC,GACAV,GACAC,GACAC,GACAC,MACG;AACG,QAAAC,IAAU,CAAC,GAAGJ,CAAU,EAAE,KAAK,CAAC,GAAQM,MAAW;AACvD,UAAMK,IAAS,IAAI,KAAK,EAAED,CAAO,CAAC,EAAE,WAC9BE,IAAS,IAAI,KAAKN,EAAEI,CAAO,CAAC,EAAE;AAC7B,WAAAP,IAAYQ,IAASC,IAASA,IAASD;AAAA,EAAA,CAC/C;AAED,EAAAV,EAAcG,CAAO,GACRF,EAAAC,IAAY,QAAQ,MAAM;AACzC,GAEcU,IAAa,CAACC,MAAiB;AAI3C,QAAM,CAAClB,GAAOC,GAASC,CAAO,IAAIgB,EAC/B,MAAM,GAAG,EACT,IAAI,CAACC,MAAiB,SAASA,CAAI,CAAC,GAGjCC,IAAepB,IAAQ,KAAKC;AAGlC,MAAIoB,IAAkB;AACtB,UAAQ,IAAM;AAAA,IACZ,KAAKD,KAAgB;AACD,MAAAC,IAAA;AAClB;AAAA,IACF,MAAKD,KAAgB,MAAMA,KAAgB;AACvB,MAAAC,IAAA;AAClB;AAAA,IACF,MAAKD,KAAgB,MAAMA,KAAgB;AACvB,MAAAC,IAAA;AAClB;AAAA,IACF;AACoB,MAAAA,IAAA;AAAA,EACtB;AAEM,QAAAC,IAAgBF,IAAe,IAAI,UAAU;AAG5C,SAAA;AAAA,IACL,mBAAmBC;AAAA,IACnB,iBAAiBC;AAAA,EAAA;AAGrB,GAEaC,IAA8B,CAACC,MAAsC;AAEhF,MAAI,CAACA;AAAkB,WAAA;AAGvB,QAAMC,IADM,KAAK,QACE,IAAI,KAAKD,CAAS,EAAE,WACjCtB,IAAU,KAAK,MAAMuB,IAAO,GAAI,GAChCxB,IAAU,KAAK,MAAMC,IAAU,EAAE,GACjCF,IAAQ,KAAK,MAAMC,IAAU,EAAE,GAC/ByB,IAAO,KAAK,MAAM1B,IAAQ,EAAE;AAElC,UAAQ,IAAM;AAAA,IACZ,KAAK0B,IAAO;AACV,aAAO,IAAI,KAAKF,CAAS,EAAE,mBAAmB,QAAW;AAAA,QACvD,OAAO;AAAA,QACP,KAAK;AAAA,MAAA,CACN;AAAA,IACH,KAAKE,MAAS;AACL,aAAA;AAAA,IACT,MAAKA,KAAQ,KAAKA,KAAQ;AACxB,aAAO,GAAGA,CAAI;AAAA,IAChB,KAAKA,MAAS;AACL,aAAA;AAAA,IACT,MAAK1B,KAAS,KAAKA,KAAS;AAC1B,aAAO,GAAGA,CAAK;AAAA,IACjB,MAAKA,MAAU,KAAKC,IAAU,KAAKA,KAAW;AAC5C,aAAO,GAAGA,CAAO;AAAA,IACnB,MAAKD,MAAU,KAAKC,MAAY;AACvB,aAAA;AAAA,IACT,KAAKC,KAAW;AACP,aAAA;AAAA,IACT;AACS,aAAA;AAAA,EACX;AACF;"}